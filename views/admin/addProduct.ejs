<%- include('../partials/admin/adminHeader') %>
<!-- Include SweetAlert2 script -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

    <div class="container">
        <form action="/admin/addProduct" method="post" class="myform form-group" style="padding-top: 70px;"
            enctype="multipart/form-data" id="productEditingForm">
            <div class="card">
                <div class="card-body">
                    <% if (typeof message !="undefined" ) {%>

                        <p id="errorMessage" class="mt-3 text-danger">
                            <%= message %>
                        </p>
                        <%}%>
                            <div class="card-header bg-primary text-white">
                                <h3 class="text-center mb-0">Product Save Info</h3>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="productName" class="form-label mt-4">Product Name</label>
                                        <input type="text" name="productName" class="form-control" id="productName"
                                            placeholder="Product Name">
                                        <p class="text-danger" id="name_error"></p>
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="brandName" class="form-label mt-4">Product Brand</label>
                                        <input type="text" name="brandName" class="form-control" id="brandName"
                                            placeholder="Product Brand">
                                        <p class="text-danger" id="brandName_error"></p>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="description" class="form-label mt-4">Product Description</label>
                                        <textarea class="form-control" name="description" id="description" cols="30"
                                            rows="3" placeholder="Product Description"></textarea>
                                        <p class="text-danger" id="description_error"></p>
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="stockCount" class="form-label mt-4">Stock Quantity</label>
                                        <input type="number" name="stockCount" class="form-control" id="stockCount"
                                            placeholder="Stock Quantity">
                                        <p class="text-danger" id="stockCount_error"></p>
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="price" class="form-label mt-4">Price</label>
                                        <input type="number" name="price" class="form-control" id="price"
                                            placeholder="Main Price">
                                        <p class="text-danger" id="price_error"></p>
                                    </div>
                                </div>
                            </div>

                            <div class="row">

                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="productOffer" class="form-label mt-4">Product
                                            Offer(percentage)</label>
                                        <input type="number" name="productOffer" class="form-control" id="productOffer"
                                            placeholder="Product Offer(percentage)">
                                        <p class="text-danger" id="pedOffer_error"></p>
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="category" class="form-label mt-4">Product Category</label>
                                        <select class="form-select drop1" name="category">

                                            <% categorys.forEach((category)=> { %>
                                                <option value="<%= category._id %>">
                                                    <%= category.categoryName %>
                                                </option>
                                                <% }) %>
                                        </select>
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="colorTypes" class="form-label mt-4">Color Types</label>
                                        <input type="text" name="productColor" class="form-control" id="colorTypes"
                                            placeholder="Color Types">
                                        <p class="text-danger" id="colorTypes_error"></p>
                                    </div>
                                </div>


                                <div class="col-md-4">
                                    <label for="mainImage" class="form-label mt-4">Main Image / File</label>
                                    <div class="form-group">
                                        <div class="row" id="selectedImagesContainer">
                                            <!-- Selected images will be displayed here dynamically -->
                                        </div>
                                        <input type="file" name="image" multiple class="form-control" id="mainImage"
                                            placeholder="Main Image / File" onchange="previewImages()">
                                        <p class="text-danger" id="image_error"></p>
                                    </div>
                                </div>


                            </div>

                            <div class="row">
                                <div class="col-md-12 text-center mt-5">
                                    <button type="submit" class="btn btn-primary btn-lg">Save Products</button>
                                </div>
                            </div>
                </div>
            </div>
        </form>
    </div>
    <script>
        function previewImages() {
            const selectedImagesContainer = document.getElementById("selectedImagesContainer");
            selectedImagesContainer.innerHTML = ""; // Clear previous images

            const input = document.getElementById("mainImage"); // Change 'images' to 'mainImage'
            const files = input.files;

            for (let i = 0; i < files.length; i++) {
                const file = files[i];
                const reader = new FileReader();

                reader.onload = function (e) {
                    const imgElement = document.createElement("img");
                    imgElement.src = e.target.result;
                    imgElement.alt = "Selected Image";
                    imgElement.classList.add("img-fluid", "rounded", "mb-3");

                    const deleteButton = document.createElement("button");
                    deleteButton.type = "button";
                    deleteButton.classList.add("btn", "btn-danger", "btn-delete-preview");
                    deleteButton.textContent = "X";
                    deleteButton.addEventListener("click", function () {
                        // Remove the corresponding preview image and button
                        selectedImagesContainer.removeChild(divElement);
                    });

                    const divElement = document.createElement("div");
                    divElement.classList.add("col-md-4");
                    divElement.appendChild(imgElement);
                    divElement.appendChild(deleteButton);

                    selectedImagesContainer.appendChild(divElement);
                };

                reader.readAsDataURL(file);
            }
        }
    </script>


    <script>
        setTimeout(() => {
            const errorMessage = document.getElementById('errorMessage');
            if (errorMessage) {
                errorMessage.style.display = "none"
            }
        }, 4000);
    </script>

    <script>

        const productEditingForm = document.getElementById("productEditingForm")

        const productName = document.getElementById("productName")
        const brandName = document.getElementById("brandName")
        const description = document.getElementById("description")
        const colorTypes = document.getElementById("colorTypes")
        const stockCountInput = document.getElementById("stockCount");
        const priceInput = document.getElementById("price");
        const productOffer = document.getElementById("productOffer")

        const name_error = document.getElementById("name_error")
        const brandName_error = document.getElementById("brandName_error")
        const description_error = document.getElementById("description_error")
        const colorTypes_error = document.getElementById("colorTypes_error")
        const stockCountError = document.getElementById("stockCount_error");
        const priceError = document.getElementById("price_error");
        const prodOfferError = document.getElementById("pedOffer_error")

        const imageInput = document.getElementById("mainImage");
        const imageError = document.getElementById("image_error");


        function offerValidation() {
            console.log("cat", productOffer, "value", productOffer.value);
            if (productOffer.value >= 81) {
                prodOfferError.innerHTML = "You can't set offer above 80%"
                return false;
            } else if (!productOffer.value) {
                prodOfferError.innerHTML = "Category offer must be filled or 0"
                return false;
            } else if (productOffer.value < 0) {
                prodOfferError.innerHTML = "cannot set offer less than 0"
                return false;
            } else {
                prodOfferError.innerHTML = "";
                return true;
            }
        }



        function nameValidation() {

            const nameRegex = /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/;

            if (productName.value.trim() === "") {
                name_error.innerHTML = "Please enter the Product Name!";
                return false;
            } else {
                name_error.innerHTML = "";
                return true;
            }
        }
        function brandName_validation() {
            const nameRegex = /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/;
            if (brandName.value.trim() === "") {
                brandName_error.innerHTML = "Please enter a valid Product Name.";
                return false;

            } else if (!nameRegex.test(brandName.value)) {
                brandName_error.innerHTML = "Please enter a valid Product Name.";
                return false;

            } else {
                return true
            }
        }

        function description_Validation() {
            if (description.value.trim().length <= 15) {
                description_error.innerHTML = "Description must be at least 15 characters long.";
                return false;

            } else {
                description_error.innerHTML = "";
                return true;
            }
        }

        function colorTypes_validation() {
            if (!/^[A-Za-z\s]+$/.test(colorTypes.value.trim())) {
                colorTypes_error.innerHTML = "Color Types must contain only words (non-numeric characters)";
                return false;
            }
            colorTypes_error.innerHTML = "";
            return true;
        }

        function validateStockCount() {
            const stockCountValue = parseInt(stockCountInput.value, 10);

            if (stockCountInput.value.trim() === '' || isNaN(stockCountValue) || stockCountValue <= 0) {
                stockCountError.innerHTML = "Please enter a valid stock quantity greater than 0.";
                return false;
            } else {
                stockCountError.innerHTML = "";
                return true;
            }
        }

        function validatePrice() {
            const priceValue = parseInt(priceInput.value, 10);

            if (priceInput.value.trim() === '' || isNaN(priceValue) || priceValue <= 0) {
                console.log("Price is not valid");
                priceError.innerHTML = "Please enter a valid price greater than 0.";
                return false;
            } else {
                priceError.innerHTML = "";
                return true;
            }
        }

        function isValidImageType(file) {
            const allowedImageTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp', 'image/svg+xml'];
            return file && allowedImageTypes.includes(file.type);
        }

        function validateImages() {
            const files = Array.from(imageInput.files);
            if(files.length <= 0){
                imageError.innerHTML = "Image is Mandatory"
                return false
            }

            const invalidFiles = files.filter(file => !isValidImageType(file));

            if (invalidFiles.length > 0) {
                imageError.innerHTML = "Invalid file type. Please upload a valid image.";
                return false;
            } else {
                imageError.innerHTML = "";
                return true;
            }
        }


        productEditingForm.addEventListener("submit", function (event) {
            event.preventDefault();

            const validations = [
                nameValidation(),
                brandName_validation(),
                description_Validation(),
                colorTypes_validation(),
                validateStockCount(),
                validatePrice(),
                validateImages(),
                offerValidation(),
            ];

            const hasErrors = validations.some(validation => validation === false);
            console.log(hasErrors);

            if (!hasErrors) {
                    productEditingForm.submit();
            }
        });
    </script>
    <%- include('../partials/admin/adminFooter') %>