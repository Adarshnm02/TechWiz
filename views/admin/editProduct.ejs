<%- include('../partials/admin/adminHeader') %>

    <style>
        .img-fluid {
            max-width: 73%;
            height: 244px;
        }

        .form-control {
            margin-bottom: 10px;
            background-color: #fbfbfb;
            color: #697989;

        }
    </style>

    <div class="col-12 d-flex justify-content-center ">
        <div class="card w-75">
            <div class="card-body" style="margin-top: 55px;">
                <h3 class="card-title text-center mb-4">Add Product</h3>
                <form class="forms-sample" method="post" action="/admin/products/edit/<%= products._id %>"
                    enctype="multipart/form-data" id="productEditingForm1">
                    <% if (typeof message !="undefined" ) {%>

                        <p id="errorMessage" class="mt-3 text-danger">
                            <%= message %>
                        </p>
                        <%}%>


                            <input type="hidden" name="id" value="<%= products._id %>">

                            <div class="form-group">
                                <label for="exampleInputName1" class="form-label">Product Name</label>
                                <input type="text" name="productName" class="form-control" id="productName"
                                    placeholder="Product Name" value="<%= products.product_name %>">
                                <p class="text-danger" id="name_error"></p>
                            </div>

                            <div class="form-group">
                                <label for="exampleInputEmail3" class="form-label">Brand Name</label>
                                <input type="text" name="brandName" class="form-control" id="brandName"
                                    placeholder="Brand Name" value="<%= products.brand_name %>">
                                <p class="text-danger" id="brandName_error"></p>
                            </div>
                            <div class="form-group">
                                <label for="ColorInputName1" class="form-label">Product Color</label>
                                <input type="text" name="productColor" class="form-control" id="productColor"
                                    placeholder="Product Color" value="<%= products.color %>">
                                <p class="text-danger" id="color_error"></p>
                            </div>

                            <div class="form-group">
                                <label for="category" class="form-label">Category</label>
                                <select class="form-control" name="categorys">
                                    <% category.forEach((category)=> { %>
                                        <option value="<%= category._id %>">
                                            <%= category.categoryName %>
                                        </option>
                                        <% }) %>
                                </select>
                            </div>

                            <div class="form-group">
                                <label for="exampleInputPassword4" class="form-label">Product Price</label>
                                <input type="number" name="price" class="form-control" id="price" placeholder="Price"
                                    value="<%= products.price %>">
                                <p class="text-danger" id="price_error"></p>
                            </div>

                            <div class="form-group">
                                <label for="exampleInputCity1" class="form-label">Stock Count</label>
                                <input type="text" name="stockCount" class="form-control" id="stockCount"
                                    placeholder="Count" value="<%= products.stock_count%>">
                                <p class="text-danger" id="stockCount_error"></p>
                            </div>

                            <div class="form-group">
                                <label for="productOffer" class="form-label">Product Offer(percentage)</label>
                                <input type="number" name="productOffer" class="form-control" id="productOffer"
                                    value="<%= products.offer%>">
                                <p class="text-danger" id="pedOffer_error"></p>
                            </div>

                            <div class="form-group">
                                <label for="description" class="form-label">Description</label>
                                <textarea class="form-control" id="description" name="description" rows="8"
                                    placeholder="Write about the Product"><%= products.description %></textarea>
                                <p class="text-danger" id="description_error"></p>
                            </div>

                            <div class="form-group">
                                <label class="form-label">Uploaded Images</label>
                                <div class="input-group">
                                    <div class="row">
                                        <% products.image.forEach(image=> { %>
                                            <div class="col-md-4 mb-3">
                                                <div style="position: relative;">
                                                    <img src="data:<%= image.contentType %>;base64,<%= image.data.toString('base64') %>"
                                                        alt="<%= products.product_name %>" class="img-fluid rounded">
                                                    <a class="btn btn-danger btn-delete-image"
                                                        href="/admin/products/<%= image._id %>/<%= id %>/deleteImg">X</a>
                                                </div>
                                            </div>
                                            <% }) %>
                                    </div>
                                    <!-- <input type="file" id="images" name="image" multiple
                                        class="form-control file-upload-info"> -->
                                </div>
                                <!-- <p class="text-danger" id="image_error"></p> -->
                            </div>


                            <div class="col-md-4">
                                <label for="mainImage" class="form-label mt-4">New images for submit</label>
                                <div class="form-group">
                                    <div class="row" id="selectedImagesContainer">
                                        <!-- Selected images will be displayed here dynamically -->
                                    </div>
                                    <input type="file" name="image" multiple class="form-control" id="images"
                                        placeholder="Main Image / File" onchange="previewImages()">
                                    <p class="text-danger" id="image_error"></p>
                                </div>
                            </div>




                            <% if (typeof message !="undefined" ) {%>

                                <p class="mt-3 text-danger">
                                    <%= message %>
                                </p>

                                <%} %>


                                    <div class="d-flex justify-content-center">
                                        <button type="submit" class="btn btn-primary mr-2">Submit</button>
                                        <button type="reset" class="btn btn-light">Cancel</button>
                                    </div>
                </form>
            </div>
        </div>
    </div>
    <script>
        function previewImages() {
            const selectedImagesContainer = document.getElementById("selectedImagesContainer");
            selectedImagesContainer.innerHTML = ""; // Clear previous images

            const input = document.getElementById("images"); // Change 'images' to 'mainImage'
            const files = input.files;

            for (let i = 0; i < files.length; i++) {
                const file = files[i];
                const reader = new FileReader();

                reader.onload = function (e) {
                    const imgElement = document.createElement("img");
                    imgElement.src = e.target.result;
                    imgElement.alt = "Selected Image";
                    imgElement.classList.add("img-fluid", "rounded", "mb-3");

                    const deleteButton = document.createElement("button");
                    deleteButton.type = "button";
                    deleteButton.classList.add("btn", "btn-danger", "btn-delete-preview");
                    deleteButton.textContent = "X";
                    deleteButton.addEventListener("click", function () {
                        // Remove the corresponding preview image and button
                        selectedImagesContainer.removeChild(divElement);
                    });

                    const divElement = document.createElement("div");
                    divElement.classList.add("col-md-4");
                    divElement.appendChild(imgElement);
                    divElement.appendChild(deleteButton);

                    selectedImagesContainer.appendChild(divElement);
                };

                reader.readAsDataURL(file);
            }
        }
    </script>


    <script>
        setTimeout(() => {
            const errorMessage = document.getElementById('errorMessage');
            if (errorMessage) {
                errorMessage.style.display = "none"
            }
        }, 3000);
    </script>

    <script>

        const productEditingForm = document.getElementById("productEditingForm1")

        const productName = document.getElementById("productName")
        const brandName = document.getElementById("brandName")
        const stockCountInput = document.getElementById("stockCount");
        const description = document.getElementById("description")
        const priceInput = document.getElementById("price");
        const productOffer = document.getElementById("productOffer")
        const colorType = document.getElementById("productColor")


        const name_error = document.getElementById("name_error")
        const brandName_error = document.getElementById("brandName_error")
        const stockCountError = document.getElementById("stockCount_error");
        const description_error = document.getElementById("description_error")
        const priceError = document.getElementById("price_error");
        const prodOfferError = document.getElementById("pedOffer_error")
        const colorType_error = document.getElementById("color_error")

        const imageInput = document.getElementById("images");
        const imageError = document.getElementById("image_error");


        function offerValidation(){
            console.log("cat", productOffer, "value", productOffer.value);
            if(productOffer.value >= 100){
                prodOfferError.innerHTML = "You can't set offer above 100%"
                return false;
            }else if(!productOffer.value){
                prodOfferError.innerHTML =  "Category offer must be filled or 0"
                return false;
            }else if(productOffer.value < 0){
                prodOfferError.innerHTML ="cannot set offer less than 0"
                return false;
            }else{
                prodOfferError.innerHTML="";
                return true;
            }
        }

        function colorTypes_validation() {
            if (!/^[A-Za-z\s]+$/.test(colorType.value.trim())) {
                colorType_error.innerHTML = "Color Types must contain only words (non-numeric characters)";
                return false;
            }
            colorType_error.innerHTML = ""; 
            return true; 
        }



        function nameValidation() {

            const nameRegex = /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/;

            if (productName.value.trim() === "") {
                name_error.innerHTML = "Please enter the Product Name!";
                return false;
                // } else if (!nameRegex.test(productName.value)) {
                //     name_error.innerHTML = "Please enter a valid Product Name.";
                //     return false;
            } else {
                name_error.innerHTML = "";
                return true;
            }
        }
        function brandName_validation() {
            const nameRegex = /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/;
            if (brandName.value.trim() === "") {
                brandName_error.innerHTML = "Please enter a valid Product Name.";
                return false;

            } else if (!nameRegex.test(brandName.value)) {
                brandName_error.innerHTML = "Please enter a valid Product Name.";
                return false;

            } else {
                return true
            }
        }
        function validateStockCount() {
            const stockCountValue = parseInt(stockCountInput.value, 10);

            if (stockCountInput.value.trim() === '' || isNaN(stockCountValue) || stockCountValue <= 0) {
                stockCountError.innerHTML = "Please enter a valid stock quantity greater than 0.";
                return false;
            } else {
                stockCountError.innerHTML = "";
                return true;
            }
        }


        function description_Validation() {

            // if (!/^[A-Za-z\s]+$/.test(description.value.trim())) {
            //     description_error.innerHTML = "Description must contain only words (non-numeric characters).";
            //     return false;

            // } else 
            if (description.value.trim().length <= 15) {
                description_error.innerHTML = "Description must be at least 15 characters long.";
                return false;

            } else {
                description_error.innerHTML = "";
                return true;
            }
        }


        function isValidImageType(file) {
            const allowedImageTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp', 'image/svg+xml'];
            return file && allowedImageTypes.includes(file.type);
        }

        function validateImages() {
            const files = Array.from(imageInput.files);

            const invalidFiles = files.filter(file => !isValidImageType(file));

            if (invalidFiles.length > 0) {
                imageError.innerHTML = "Invalid file type. Please upload a valid image.";
                return false;
            } else {
                imageError.innerHTML = "";
                return true;
            }
        }

        function validatePrice() {
            const priceValue = parseInt(priceInput.value, 10);

            if (priceInput.value.trim() === '' || isNaN(priceValue) || priceValue <= 0) {
                console.log("Price is not valid");
                priceError.innerHTML = "Please enter a valid price greater than 0.";
                return false;
            } else {
                priceError.innerHTML = "";
                return true;
            }
        }






        productEditingForm.addEventListener("submit", function (event) {
            event.preventDefault();

            const validations = [
                nameValidation(),
                brandName_validation(),
                validateStockCount(),
                description_Validation(),
                validatePrice(),
                validateImages(),
                offerValidation(),
                colorTypes_validation(),

            ];

            const hasErrors = validations.some(validation => validation === false);
            console.log(hasErrors);

            if (!hasErrors) {
                Swal.fire({
                    position: "top-end",
                    icon: "success",
                    title: "Product Detials Submitted",
                    showConfirmButton: false,
                    timer: 1500
                });
                setTimeout(() => {
                    productEditingForm.submit();
                }, 1500)
            }
        });
    </script>

    <%- include('../partials/admin/adminFooter') %>